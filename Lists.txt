Lists:

var names = new List<string> { "vinay", "Ana", "Felipe" };
foreach (var name in names)
{
  Console.WriteLine($"Hello {name.ToUpper()}!");
}

Output:
Hello VINAY!
Hello ANA!
Hello FELIPE!

Modify list contents:

names.Add("Maria");
names.Add("Bill");
names.Remove("Ana");
foreach (var name in names)
{
  Console.WriteLine($"Hello {name.ToUpper()}!");
}

Console.WriteLine($"My name is {names[0]}.");
Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

Console.WriteLine($"The list has {names.Count} people in it");

output:
Hello VINAY!
Hello FELIPE!
Hello MARIA!
Hello BILL!

My name is vinay.
I've added Maria and Bill to the list.

The list has 4 people in it

Search and sort lists:

var index = names.IndexOf("Felipe");
if (index != -1)
  Console.WriteLine($"The name {names[index]} is at index {index}");
var notFound = names.IndexOf("Not Found");
  Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
Console.WriteLine();
names.Sort();
foreach (var name in names)
{
  Console.WriteLine($"Hello {name.ToUpper()}!");
}

Output:
The name Felipe is at index 1
When an item is not found, IndexOf returns -1

Hello BILL!
Hello FELIPE!
Hello MARIA!
Hello VINAY!

Lists of other types:

var fibonacciNumbers = new List<int> {1, 1};

var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

fibonacciNumbers.Add(previous + previous2);

foreach(var item in fibonacciNumbers)
    Console.WriteLine(item);

Output:
1
1
2

Challenge:

var fibonacciNumbers = new List<int> {1, 1};

while(fibonacciNumbers.Count < 20)
{
var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

fibonacciNumbers.Add(previous + previous2);
}
foreach(var item in fibonacciNumbers)
    Console.WriteLine(item);

output:
1
1
2
3
5
8
13
21
34
55
89
144
233
377
610
987
1597
2584
4181
6765

Pattern Printing Task:

#include<stdio.h>
void main()
{	
	int a=0,i;
	for(i=1;i<6;i++)
	{ 
	    a=a*10+7;
	    printf("%d,",a);
	}
}

output:
7,77,777,7777,77777,  
